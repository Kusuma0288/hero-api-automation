parameters:
  - name: SlackWebHookUrl
    type: string
    default: https://hooks.slack.com/services/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

  - name: TestRunTitle
    type: string
    default: Apigee Automation Run Report

  - name: Profile
    type: string

  - name: ClusterUrl
    type: string
    default: https://wowuatmobileautoreports.z8.web.core.windows.net

  - name: RunEnv
    type: string
    default: uat

steps:
  - task: DockerCompose@0
    displayName: 'Run Apigee Automation'
    inputs:
      dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
      dockerComposeCommand: 'run --entrypoint="mvn clean verify test -P${{ parameters.Profile }} -Denv=${{ parameters.RunEnv }} -DsaveRequestResponse=yes" tests'
    continueOnError: true

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junitreports/TEST-*.xml'
      searchFolder: '$(Build.SourcesDirectory)'
      mergeTestResults: true
    continueOnError: true
    condition: always()

  - script: |
      echo "--Giving permissions to update target directory--"
      cd $(Build.SourcesDirectory)
      ls
      sudo chmod -R 0777 target/
      echo "--Installing python dependencies--"
      cd /usr/lib
      pip install jsonpath-rw-ext
      pip install matplotlib
      sudo apt-get install python-tk

    displayName: 'Install dependencies for Python'
    continueOnError: true
    condition: always()

  - task: PythonScript@0
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Build.SourcesDirectory)/src/test/resources/slack_reporting.py'
    displayName: 'Execute Python script'
    continueOnError: true
    condition: always()

  - powershell: |
      az storage blob upload-batch `
       --account-key 'qzySpscvrIRAlI1W/WBKEDLG7mdFh4l1thcKewSfcJmoff0A+fNpvvAB6eASFBJYWRMCi7hw+arzJyKUmWWI+Q==' `
       --account-name wowuatmobileautoreports `
       --destination '$web/apigee_${{ parameters.RunEnv }}_$(Build.BuildNumber)' `
       --source '$(Build.SourcesDirectory)/target/cucumber-reports/'

    displayName: 'Post test results to Azure blob storage'
    continueOnError: true
    condition: always()

  - powershell: |
      $testResultDetailsUrl = "${{ parameters.ClusterUrl }}/apigee_${{ parameters.RunEnv }}_$(Build.BuildNumber)/index.html"
      $imageURL = "${{ parameters.ClusterUrl }}/apigee_${{ parameters.RunEnv }}_$(Build.BuildNumber)/advanced-reports/test.png"
      $wolvesURL = "https://wowuatmobileautoreports.z8.web.core.windows.net/apigee_uat_20200717.4/pages/tag-scenarios/tag_Wolves.html"
      $lionURL = "https://wowuatmobileautoreports.z8.web.core.windows.net/apigee_uat_20200717.4/pages/tag-scenarios/tag_LION.html"



      ##Get wolves count
      $wolvesCount = ."$(Build.SourcesDirectory)/src/test/resources/squad_counts.ps1" -ServerName $wolvesURL set code=%errorlevel%
      $result = ."$(Build.SourcesDirectory)/src/test/resources/squad_counts.ps1" -ServerName $wolvesURL set code=%errorlevel%
      echo "result == " $result
      echo "Code in == " code
      ##Get lion count
      $html = $webclient.DownloadString($lionURL)
      $Regex = [Regex]::Matches($html, $pattern)
      $newVal = $Regex.value
      $pattern11='<i[^>]*>(?:.|\n)+?</i>'
      $Regex1 = [Regex]::Matches($newVal, $pattern11)
      $lionCount= $Regex1.value.split('title="passed"></i>')[1].Trim().Substring(0,1)

      echo "lionCount =  "  $lionCount

      $color = 'good';
      $slackMessage = @{
      attachments = @(
      @{
        title = '${{ parameters.TestRunTitle }}'
        color = $color
        title_link = $testResultDetailsUrl
        fields = @(
            @{title = 'Source Branch'; value = '$(Build.SourceBranchName)' ; short = 'true'},
            @{title = 'Run Env'; value = '${{ parameters.RunEnv }}'; short = 'true'}
            if($wolvesCount -ne 0){
            @{title = 'Wolves'; value = $wolvesCount; short = 'false'}
            }
            if($lionCount -ne 0){
            @{title = 'Lion'; value = $lionCount; short = 'false'}
            }
            @{title = 'Lobsters'; value = $lionCount; short = 'false'}
            @{title = 'Vegemite'; value = $lionCount; short = 'false'}
            @{title = 'Nutella'; value = $lionCount; short = 'false'}
          )
         image_url = $imageURL
       }

      )
      } | ConvertTo-Json -Depth 5

      Invoke-RestMethod -Uri '${{ parameters.SlackWebhookUrl }}' `
       -Method Post `
       -Body $slackMessage `
       -UseBasicParsing `
       -ContentType 'application/json'

    displayName: 'Post test results to Slack'
    continueOnError: true
    condition: and(succeeded(), ne('${{ parameters.SlackWebhookUrl }}', ''))




