# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
 - none

parameters: # Displayed to user as drop-down list
 - name: tags
   displayName: System tag to test
   default: Pipeline Default
   values:
    - Pipeline Default
    - IRIS
    - APIGEE
    - TRADER
    - REWARDS
    - SCANGO
 - name: env
   displayName: Environment to test
   default: Pipeline Default
   values:
    - Pipeline Default
    - PROD
    - UAT
    - TEST

variables:
 - group: MOBILE-AUTOMATION-ALL-ENVS   # Ref: https://wowonline.visualstudio.com/Mobile/_library
 - name: tags
   value: ${{ parameters.tags }} # take user selected tags
 - name: tags
   ${{ if eq( parameters.tags, 'Pipeline Default' ) }}:
    value: $(default_tags) # else take 'default_tags' from pipeline variables
 - name: env
   value: ${{ parameters.env }} # take user selected env
 - name: env
   ${{ if eq( parameters.env, 'Pipeline Default' ) }}:
    value: $(default_env) # else take 'default_env' from pipeline variables

jobs:
 - job: run_tests
   displayName: 'Run tests and save report'
   pool:
    vmImage: ubuntu-latest
   steps:
    - task: Maven@3
      displayName: 'Run maven checkstyle'
      inputs:
       mavenPomFile: 'pom.xml'
       checkStyleRunAnalysis: true
       goals: 'checkstyle:checkstyle'
      continueOnError: true

    - powershell: |
       $XMLfile = '$(Build.SourcesDirectory)/target/checkstyle-result.xml'
       [XML]$errorDetails = Get-Content $XMLfile

       $rows = $errorDetails.checkstyle.file.error
       if($rows.count -gt 0){
         echo $rows
         throw "Build failed. Please check the lint errors."
       }
      displayName: 'Analysing Code linting results'
      continueOnError: false
      condition: always()

    - task: Maven@3
      displayName: 'Execute Tests'
      inputs:
       mavenPomFile: 'pom.xml'
       mavenOptions: '-Xmx3072m'
       javaHomeOption: 'JDKVersion'
       jdkVersionOption: '1.8'
       jdkArchitectureOption: 'x64'
       testRunTitle: '${{ parameters.tags }} API Tests @ ${{ parameters.env }}'
       goals: 'verify'
       options: '-P testByTags -D tags=@${{ variables.tags }} -D env=@${{ variables.env }}'
      continueOnError: false
      condition: succeeded()

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
       testResultsFormat: 'JUnit'
       testResultsFiles: '**/failsafe-reports/TEST-*.xml'
       searchFolder: '$(Build.SourcesDirectory)'
       mergeTestResults: true
       testRunTitle: '@${{ variables.tags }} API Test Run @${{ variables.env }}'
      continueOnError: true
      condition: succeeded()

    - powershell: |
       az storage blob upload-batch `
        --account-key 'qzySpscvrIRAlI1W/WBKEDLG7mdFh4l1thcKewSfcJmoff0A+fNpvvAB6eASFBJYWRMCi7hw+arzJyKUmWWI+Q==' `
        --account-name wowuatmobileautoreports `
        --destination '$web/${{ variables.tags }}_${{ variables.env }}_$(Build.BuildNumber)' `
        --source '$(Build.SourcesDirectory)/target/cucumber-reports/'

       [xml]$xml = Get-Content $(Build.SourcesDirectory)/target/failsafe-reports/failsafe-summary.xml
       $summary = $($xml.'failsafe-summary')
       Write-Host "##vso[task.setvariable variable=completed;isOutput=true;]$($summary.completed)"
       Write-Host "##vso[task.setvariable variable=failures;isOutput=true;]$($summary.failures)"
       Write-Host "##vso[task.setvariable variable=skipped;isOutput=true;]$($summary.skipped)"
       Write-Host "##vso[task.setvariable variable=errors;isOutput=true;]$($summary.errors)"

       [int]$total_errors_or_failures = $summary.failures + $summary.errors

       $slackColour = ($total_errors_or_failures -eq 0) ? "#2ECC71" : "#FF0000"
       Write-Host "##vso[task.setvariable variable=slackColour;isOutput=true;]$slackColour"

       $slackEmoji = ($total_errors_or_failures -eq 0) ? ":white_check_mark:" : ":firecracker:"
       Write-Host "##vso[task.setvariable variable=slackEmoji;isOutput=true;]$slackEmoji"
      name: TestOutput
      displayName: 'Post test results to Azure blob storage'
      continueOnError: true
      condition: succeeded()

 - job: server_to_contact_slack
   displayName: 'Azure server job to send test results to Slack'
   dependsOn: run_tests
   variables:
    testResults: $[ dependencies.run_tests.outputs['TestOutput.testResults'] ]
    completed: $[ dependencies.run_tests.outputs['TestOutput.completed'] ]
    failures: $[ dependencies.run_tests.outputs['TestOutput.failures'] ]
    skipped: $[ dependencies.run_tests.outputs['TestOutput.skipped'] ]
    errors: $[ dependencies.run_tests.outputs['TestOutput.errors'] ]
    slackColour: $[ dependencies.run_tests.outputs['TestOutput.slackColour'] ]
    slackEmoji: $[ dependencies.run_tests.outputs['TestOutput.slackEmoji'] ]
   condition: succeeded()
   pool: server
   steps:
    - task: InvokeRESTAPI@1
      inputs:
       connectionType: 'connectedServiceName'
       serviceConnection: 'slack_temp_reports'
       method: 'POST'
       headers: |
        {
         "Content-Type":"application/json"
        }
       body: |
        {
           "attachments":[
              {
                 "mrkdwn_in":[
                    "text"
                 ],
                 "color":"$(slackColour)",
                 "pretext":"$(Build.DefinitionName) Test Results",
                 "title":"@${{ variables.tags }} @${{ variables.env }} $(slackEmoji)",
                 "title_link":"https://wowuatmobileautoreports.z8.web.core.windows.net/${{ variables.tags }}_${{ variables.env }}_$(Build.BuildNumber)/pages/scenario-summary.html",
                 "fields":[
                    {
                       "title":"Total / Fail / Errors / Skipped",
                       "value":"$(completed) / $(failures) / $(errors) / $(skipped)",
                       "short":true
                    }
                 ]
              }
           ]
        }
       waitForCompletion: 'false'